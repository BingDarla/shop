{"version":3,"sources":["mocks/mockedProductList.ts","service/apiService.ts","hooks/useProductList.ts","context/cartContext.tsx","helper/imageUrlHelper.ts","components/cartCardComponent/cartCardComponent.tsx","components/cartComponent.tsx/cartComponent.tsx","components/productCardComponent/productCardComponent.tsx","components/homeComponent/homeComponent.tsx","components/routeComponent/routeConponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mockedProductList","Array","map","u","i","title","price","Math","floor","random","image","logo","fetchProducts","a","Promise","resolve","data","useProducts","useState","productList","setProductList","isLoading","setIsLoading","useEffect","response","console","log","fetchList","CartContext","createContext","list","CartProvider","children","setList","addToCart","useCallback","newItem","prevList","emptyCart","remove","product","filter","item","Provider","value","useCartContext","useContext","imageUrlHelper","CartCard","props","productImage","useMemo","className","src","alt","onClick","event","stopPropagation","IconButton","Cart","isClicked","onClose","cartClass","classNames","Boolean","length","Button","variant","startIcon","ProductCard","endIcon","Home","useProductList","isCartClicked","setIsCartClicked","index","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93b3ac8f.chunk.js","sourcesContent":["const mockedProductList = [...Array(9)].map((u, i) => ({\n    title: `item ${i + 1}`,\n    price: Math.floor(Math.random() * 15) + 4,\n    image: `${i + 1}.png`,\n    logo: `${i + 1}logo.png`\n}));\nexport default mockedProductList;\n","import mockedProductList from '../mocks/mockedProductList';\n\nexport const fetchProducts: () => Promise<{ data: any }> = async () => {\n    return Promise.resolve({ data: mockedProductList });\n};\n","import { useEffect, useState } from 'react';\nimport { fetchProducts } from '../service/apiService';\n\nconst useProducts = () => {\n    const [productList, setProductList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        async function fetchList() {\n            setIsLoading(true);\n\n            try {\n                const response = await fetchProducts();\n                setProductList(response?.data);\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        fetchList();\n    }, []);\n\n    return { productList, isLoading };\n};\n\nexport default useProducts;\n","import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { ProductProps } from '../components/productCardComponent/productCardComponent';\n\nexport interface CartContextInterface {\n    list: ProductProps[];\n    addToCart?: (newItem: ProductProps) => void;\n    emptyCart?: () => void;\n    remove?: (product: ProductProps) => void;\n}\n\nexport const CartContext = createContext<CartContextInterface>({\n    list: []\n});\n\nconst CartProvider: React.FC = ({ children }) => {\n    const [list, setList] = useState<ProductProps[]>([]);\n    const addToCart = useCallback(\n        (newItem: ProductProps) => setList(prevList => [...prevList, newItem]),\n        []\n    );\n    const emptyCart = useCallback(() => setList([]), []);\n\n    const remove = useCallback(\n        (product: ProductProps) => setList([...list].filter(item => item.title !== product.title)),\n        [list]\n    );\n\n    return (\n        <CartContext.Provider value={{ list, addToCart, emptyCart, remove }}>\n            {children}\n        </CartContext.Provider>\n    );\n};\n\nexport default CartProvider;\nexport const useCartContext: () => CartContextInterface = () => useContext(CartContext);\n","export const imageUrlHelper: (image: string) => string = image => {\n    return `/images/${image}`;\n};\nexport default imageUrlHelper;\n","import IconButton from '@mui/material/IconButton';\nimport React, { useCallback, useMemo } from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useCartContext } from '../../context/cartContext';\nimport imageUrlHelper from '../../helper/imageUrlHelper';\nimport { ProductProps } from '../productCardComponent/productCardComponent';\nimport './cartCardComponent.css';\n\nconst CartCard: React.FC<{ item: ProductProps }> = props => {\n    const { item } = props;\n    const productImage = useMemo(\n        () => (\n            <img\n                className=\"cartCardComponent__image\"\n                src={imageUrlHelper(item.logo)}\n                alt={item.title}\n            />\n        ),\n        [item]\n    );\n\n    const { remove } = useCartContext();\n    const onClick = useCallback(\n        (event: any) => {\n            if (remove) {\n                remove(item);\n            }\n            event.stopPropagation();\n        },\n        [remove, item]\n    );\n\n    return (\n        <div className=\"cartCardComponent\">\n            {productImage}\n            <div className=\"cartCardComponent__Info\">\n                <span className=\"cartCardComponent__tag\">{item.title}</span>\n                <span className=\"cartCardComponent__tag\">{`$ ${item.price}`}</span>\n            </div>\n            <IconButton onClick={onClick} aria-label=\"remove\">\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    );\n};\n\nexport default CartCard;\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport './cartComponent.css';\nimport { useCartContext } from '../../context/cartContext';\nimport Button from '@mui/material/Button';\nimport LocalShippingIcon from '@mui/icons-material/LocalShipping';\nimport { IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CartCard from '../cartCardComponent/cartCardComponent';\n\nconst Cart: React.FC<{ isClicked: boolean; onClose: () => void }> = ({ isClicked, onClose }) => {\n    const cartClass = useMemo(\n        () => classNames('cartComponent', { '--visible': isClicked }),\n        [isClicked]\n    );\n    const { list } = useCartContext();\n\n    return (\n        <div className={cartClass}>\n            <div className=\"cartComponent__header\">\n                <span>Cart Summary</span>\n                <IconButton onClick={onClose} aria-label=\"close\">\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            <div className=\"cartComponent__content\">\n                {Boolean(list.length) ? (\n                    <ol>\n                        {list.map(item => (\n                            <li key={item.title}>\n                                <CartCard item={item} />\n                            </li>\n                        ))}\n                    </ol>\n                ) : (\n                    <div className=\"cartComponent__empty\">Your cart is empty</div>\n                )}\n            </div>\n\n            <div className=\"cartComponent__actions\">\n                <Button variant=\"contained\" startIcon={<LocalShippingIcon />}>\n                    Calculate Toll\n                </Button>\n                <Button variant=\"contained\">Order</Button>\n            </div>\n        </div>\n    );\n};\nexport default Cart;\n","import React, { useCallback, useMemo } from 'react';\nimport Button from '@mui/material/Button';\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\nimport { useCartContext } from '../../context/cartContext';\nimport imageUrlHelper from '../../helper/imageUrlHelper';\nimport './productCardComponent.css';\n\nexport interface ProductProps {\n    title: string;\n    price: number;\n    image: string;\n    logo: string;\n}\n\nconst ProductCard: React.FC<{ product: ProductProps }> = props => {\n    const { product } = props;\n    const productImage = useMemo(\n        () => (\n            <img\n                className=\"productCardComponent__image\"\n                src={imageUrlHelper(product.image)}\n                alt={product.title}\n            />\n        ),\n        [product]\n    );\n\n    const { addToCart } = useCartContext();\n    const onClick = useCallback(\n        (event: any) => {\n            if (addToCart) {\n                addToCart(product);\n            }\n            event.stopPropagation();\n        },\n        [addToCart, product]\n    );\n\n    return (\n        <div className=\"productCardComponent\">\n            {productImage}\n            <div className=\"productCardComponent__info\">\n                <span className=\"productCardComponent__tag\">{product.title}</span>\n                <span className=\"productCardComponent__tag\">{`$ ${product.price}`}</span>\n            </div>\n            <Button variant=\"contained\" onClick={onClick} endIcon={<AddShoppingCartIcon />}>\n                ADD\n            </Button>\n        </div>\n    );\n};\n\nexport default ProductCard;\n","import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport useProductList from '../../hooks/useProductList';\nimport Cart from '../cartComponent.tsx/cartComponent';\nimport ProductCard from '../productCardComponent/productCardComponent';\nimport './homeComponent.css';\n\nconst Home = () => {\n    const { productList, isLoading } = useProductList();\n    const [isCartClicked, setIsCartClicked] = useState<boolean>(false);\n\n    return (\n        <main className=\"homeComponent\">\n            <div className=\"homeComponent__heading\">\n                <h1>Online Shop</h1>\n                <Button\n                    variant=\"contained\"\n                    onClick={() => setIsCartClicked(!isCartClicked)}\n                    startIcon={<ShoppingCartIcon />}\n                >\n                    CART\n                </Button>\n\n                {isCartClicked && (\n                    <Cart isClicked={isCartClicked} onClose={() => setIsCartClicked(false)} />\n                )}\n            </div>\n            <div className=\"homeComponent__products\">\n                {isLoading ? (\n                    <div>Loading...</div>\n                ) : Boolean(productList.length) ? (\n                    <ol className=\"homeComponent__products-list\">\n                        {productList.map((product, index) => (\n                            <li key={index} className=\"homeComponent__products-li\">\n                                <ProductCard product={product} />\n                            </li>\n                        ))}\n                    </ol>\n                ) : (\n                    <div>NO PRODUCT</div>\n                )}\n            </div>\n        </main>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Home from '../homeComponent/homeComponent';\n\nconst Routes:React.FC=()=>{\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n        </Switch>\n    )\n}\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './components/routeComponent/routeConponent';\nimport CartProvider from './context/cartContext';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <CartProvider>\n                    <Routes />\n                </CartProvider>\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}