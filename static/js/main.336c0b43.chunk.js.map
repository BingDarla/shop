{"version":3,"sources":["mocks/mockedProductList.ts","mocks/mockedComputeToll.ts","service/apiService.ts","hooks/useProductList.ts","context/cartContext.tsx","helper/imageUrlHelper.ts","components/cartCardComponent/cartCardComponent.tsx","components/cartComponent.tsx/cartComponent.tsx","components/productCardComponent/productCardComponent.tsx","components/homeComponent/homeComponent.tsx","components/successPageComponent/successPageComponent.tsx","components/routeComponent/routeConponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mockedProductList","Array","map","u","i","title","price","Math","floor","random","image","logo","mockedComputeToll","total","fetchProducts","a","Promise","resolve","data","computeToll","subTotal","putOrder","products","statue","useProducts","useState","productList","setProductList","isLoading","setIsLoading","useEffect","response","console","log","fetchList","CartContext","createContext","list","CartProvider","children","setList","setSubTotal","toll","setToll","addToCart","useCallback","newItem","prevList","prevSubTotal","emptyCart","remove","product","filter","item","hasAdded","includes","onUpdateToll","Provider","value","useCartContext","useContext","imageUrlHelper","CartCard","props","productImage","useMemo","className","src","alt","onClick","event","stopPropagation","IconButton","Cart","isClicked","onClose","history","useHistory","onSubmit","push","Boolean","length","Button","variant","startIcon","disabled","ProductCard","endIcon","Home","useProductList","isCartClicked","setIsCartClicked","homeClass","classNames","index","SuccessPage","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.336c0b43.chunk.js","sourcesContent":["const mockedProductList = [...Array(9)].map((u, i) => ({\n    title: `item ${i + 1}`,\n    price: Math.floor(Math.random() * 20) + 4,\n    image: `${i + 1}.png`,\n    logo: `${i + 1}logo.png`\n}));\nexport default mockedProductList;\n","export const mockedComputeToll: (total: number) => number = total => (total > 50 ? 20 : 10);\nexport default mockedComputeToll;\n","import mockedProductList from '../mocks/mockedProductList';\nimport mockedComputeToll from '../mocks/mockedComputeToll';\nimport { ProductProps } from '../components/productCardComponent/productCardComponent';\n\nexport const fetchProducts: () => Promise<{ data: any }> = async () => {\n    // TODO write a httpService to handle real API calls\n    return Promise.resolve({ data: mockedProductList });\n};\n\nexport const computeToll: (subTotal: number) => Promise<{ data: number }> = async subTotal => {\n    return Promise.resolve({ data: mockedComputeToll(subTotal) });\n};\n\nexport const putOrder: (products: ProductProps[]) => Promise<any> = async products => {\n    // TODO set products as payload\n    return Promise.resolve({ statue: 200 });\n};\n","import { useEffect, useState } from 'react';\nimport { fetchProducts } from '../service/apiService';\n\nconst useProducts = () => {\n    const [productList, setProductList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        async function fetchList() {\n            setIsLoading(true);\n\n            try {\n                const response = await fetchProducts();\n                setProductList(response?.data);\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        fetchList();\n    }, []);\n\n    return { productList, isLoading };\n};\n\nexport default useProducts;\n","import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { ProductProps } from '../components/productCardComponent/productCardComponent';\nimport { computeToll } from '../service/apiService';\n\nexport interface CartContextInterface {\n    list: ProductProps[];\n    subTotal?: number;\n    toll?: number;\n    addToCart?: (newItem: ProductProps) => void;\n    emptyCart?: () => void;\n    remove?: (product: ProductProps) => void;\n    hasAdded?: (product: ProductProps) => boolean;\n    onUpdateToll?: () => void;\n}\n\nexport const CartContext = createContext<CartContextInterface>({\n    list: []\n});\n\nconst CartProvider: React.FC = ({ children }) => {\n    const [list, setList] = useState<ProductProps[]>([]);\n    const [subTotal, setSubTotal] = useState<number>(0);\n    const [toll, setToll] = useState<number>(0);\n\n    const addToCart = useCallback((newItem: ProductProps) => {\n        setList(prevList => [...prevList, newItem]);\n        setSubTotal(prevSubTotal => prevSubTotal + newItem.price);\n        setToll(0);\n    }, []);\n    const emptyCart = useCallback(() => setList([]), []);\n\n    const remove = useCallback(\n        (product: ProductProps) => {\n            setList([...list].filter(item => item.title !== product.title));\n            setSubTotal(prevSubTotal => prevSubTotal - product.price);\n            setToll(0);\n        },\n        [list]\n    );\n\n    const hasAdded = useCallback((product: ProductProps) => [...list].includes(product), [list]);\n\n    const onUpdateToll = useCallback(async () => {\n        try {\n            const response = await computeToll(subTotal);\n            setToll(response?.data);\n        } catch {\n            console.log('some errors');\n        }\n    }, [subTotal]);\n\n    return (\n        <CartContext.Provider\n            value={{\n                list,\n                addToCart,\n                emptyCart,\n                remove,\n                hasAdded,\n                subTotal,\n                onUpdateToll,\n                toll\n            }}\n        >\n            {children}\n        </CartContext.Provider>\n    );\n};\n\nexport default CartProvider;\nexport const useCartContext: () => CartContextInterface = () => useContext(CartContext);\n","export const imageUrlHelper: (image: string) => string = image => {\n    return `/images/${image}`;\n};\nexport default imageUrlHelper;\n","import React, { useCallback, useMemo } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useCartContext } from '../../context/cartContext';\nimport imageUrlHelper from '../../helper/imageUrlHelper';\nimport { ProductProps } from '../productCardComponent/productCardComponent';\nimport './cartCardComponent.css';\n\nconst CartCard: React.FC<{ item: ProductProps }> = props => {\n    const { item } = props;\n    const productImage = useMemo(\n        () => (\n            <img\n                className=\"cartCardComponent__image\"\n                src={imageUrlHelper(item.logo)}\n                alt={item.title}\n            />\n        ),\n        [item]\n    );\n\n    const { remove } = useCartContext();\n    const onClick = useCallback(\n        (event: any) => {\n            if (remove) {\n                remove(item);\n            }\n            event.stopPropagation();\n        },\n        [remove, item]\n    );\n\n    return (\n        <div className=\"cartCardComponent\">\n            {productImage}\n            <div className=\"cartCardComponent__Info\">\n                <span className=\"cartCardComponent__tag\">{item.title}</span>\n                <span className=\"cartCardComponent__tag\">{`$ ${item.price}`}</span>\n            </div>\n            <IconButton onClick={onClick} aria-label=\"remove\">\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    );\n};\n\nexport default CartCard;\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router';\nimport Button from '@mui/material/Button';\nimport { IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport LocalShippingIcon from '@mui/icons-material/LocalShipping';\nimport { useCartContext } from '../../context/cartContext';\nimport CartCard from '../cartCardComponent/cartCardComponent';\nimport { putOrder } from '../../service/apiService';\nimport './cartComponent.css';\n\nconst Cart: React.FC<{ isClicked: boolean; onClose: () => void }> = ({ isClicked, onClose }) => {\n    const { list, subTotal, onUpdateToll, toll } = useCartContext();\n    const history = useHistory();\n\n    const onSubmit = useCallback(async () => {\n        try {\n            await putOrder(list);\n            history.push('./success');\n        } catch {\n            console.log('error in putting order');\n        }\n    }, [history, list]);\n\n    return (\n        <div className=\"cartComponent\">\n            <div className=\"cartComponent__header\">\n                <span>Cart Summary</span>\n                <IconButton onClick={onClose} aria-label=\"close\">\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            <div className=\"cartComponent__content\">\n                {Boolean(list.length) ? (\n                    <ol>\n                        {list.map(item => (\n                            <li key={item.title}>\n                                <CartCard item={item} />\n                            </li>\n                        ))}\n                    </ol>\n                ) : (\n                    <div className=\"cartComponent__empty\">Your cart is empty</div>\n                )}\n            </div>\n            {Boolean(subTotal) && (\n                <div className=\"u-info\">\n                    <div className=\"u-flex-column\">\n                        <span className=\"u-tag\">Subtotal </span>\n                        <span className=\"u-tag-small\">(Excludes delivery)</span>\n                    </div>\n\n                    <span className=\"u-tag\">{`$${subTotal}`}</span>\n                </div>\n            )}\n            {Boolean(toll) && (\n                <div className=\"u-info\">\n                    <span className=\"u-tag\">Toll</span>\n                    <span className=\"u-tag\">{`$${toll}`}</span>\n                </div>\n            )}\n\n            {Boolean(list.length) && (\n                <div className=\"cartComponent__actions\">\n                    <Button\n                        variant=\"contained\"\n                        onClick={onUpdateToll}\n                        startIcon={<LocalShippingIcon />}\n                    >\n                        Toll Calculate\n                    </Button>\n                    <Button variant=\"contained\" onClick={onSubmit} disabled={!toll}>\n                        Order\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\nexport default Cart;\n","import React, { useCallback, useMemo } from 'react';\nimport Button from '@mui/material/Button';\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\nimport { useCartContext } from '../../context/cartContext';\nimport imageUrlHelper from '../../helper/imageUrlHelper';\nimport './productCardComponent.css';\n\nexport interface ProductProps {\n    title: string;\n    price: number;\n    image: string;\n    logo: string;\n}\n\nconst ProductCard: React.FC<{ product: ProductProps }> = props => {\n    const { product } = props;\n    const productImage = useMemo(\n        () => (\n            <img\n                className=\"productCardComponent__image\"\n                src={imageUrlHelper(product.image)}\n                alt={product.title}\n            />\n        ),\n        [product]\n    );\n\n    const { addToCart, hasAdded } = useCartContext();\n    const onClick = useCallback(\n        (event: any) => {\n            if (addToCart) {\n                addToCart(product);\n            }\n            event.stopPropagation();\n        },\n        [addToCart, product]\n    );\n\n    return (\n        <div className=\"productCardComponent\">\n            {productImage}\n            <div className=\"u-info\">\n                <span className=\"u-tag\">{product.title}</span>\n                <span className=\"u-tag\">{`$ ${product.price}`}</span>\n            </div>\n            <Button\n                variant=\"contained\"\n                onClick={onClick}\n                endIcon={<AddShoppingCartIcon />}\n                disabled={hasAdded && hasAdded(product)}\n            >\n                ADD\n            </Button>\n        </div>\n    );\n};\n\nexport default ProductCard;\n","import React, { useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport { Button } from '@mui/material';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport useProductList from '../../hooks/useProductList';\nimport Cart from '../cartComponent.tsx/cartComponent';\nimport ProductCard from '../productCardComponent/productCardComponent';\nimport { useCartContext } from '../../context/cartContext';\nimport './homeComponent.css';\n\nconst Home = () => {\n    const { productList, isLoading } = useProductList();\n    const { list } = useCartContext();\n    const [isCartClicked, setIsCartClicked] = useState<boolean>(false);\n    const homeClass = useMemo(\n        () => classNames('homeComponent', { '--withCart': isCartClicked }),\n        [isCartClicked]\n    );\n\n    return (\n        <main className={homeClass}>\n            <div className=\"homeComponent__heading\">\n                <h1>Online Shop</h1>\n                {Boolean(list.length) && (\n                    <Button\n                        className=\"homeComponent__cart\"\n                        variant=\"contained\"\n                        onClick={() => setIsCartClicked(!isCartClicked)}\n                        startIcon={<ShoppingCartIcon />}\n                    >\n                        CART\n                    </Button>\n                )}\n\n                {isCartClicked && (\n                    <Cart isClicked={isCartClicked} onClose={() => setIsCartClicked(false)} />\n                )}\n            </div>\n            <div className=\"homeComponent__products\">\n                {isLoading ? (\n                    <div>Loading...</div>\n                ) : Boolean(productList.length) ? (\n                    <ol className=\"homeComponent__products-list\">\n                        {productList.map((product, index) => (\n                            <li key={index} className=\"homeComponent__products-li\">\n                                <ProductCard product={product} />\n                            </li>\n                        ))}\n                    </ol>\n                ) : (\n                    <div>NO PRODUCT</div>\n                )}\n            </div>\n        </main>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport './successPageComponent.css';\n\nconst SuccessPage: React.FC = () => {\n    return (\n        <main>\n            <div className=\"successPageComponent\">\n                <header>\n                    <h1>Thank you</h1>\n                </header>\n            </div>\n        </main>\n    );\n};\nexport default SuccessPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Home from '../homeComponent/homeComponent';\nimport SuccessPage from '../successPageComponent/successPageComponent';\n\nconst Routes: React.FC = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/success\" component={SuccessPage} />\n        </Switch>\n    );\n};\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './components/routeComponent/routeConponent';\nimport CartProvider from './context/cartContext';\nimport './utils.css';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <CartProvider>\n                    <Routes />\n                </CartProvider>\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}